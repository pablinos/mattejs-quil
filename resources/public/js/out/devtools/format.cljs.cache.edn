{:rename-macros {}, :renames {}, :externs {Error {}, RegExp {}, console {error {}}}, :use-macros {safe-call devtools.util, oset devtools.util, oget devtools.util, ocall devtools.util, oapply devtools.util}, :excludes #{}, :name devtools.format, :imports nil, :requires {devtools.prefs devtools.prefs, munging devtools.munging, devtools.munging devtools.munging}, :uses {pref devtools.prefs}, :defs {get-target-object {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 98, :column 7, :end-line 98, :end-column 24, :arglists (quote ([value]))}, :name devtools.format/get-target-object, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 24, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, ->TemplateWriter {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 235, :column 10, :end-line 235, :end-column 24, :protocols #{devtools.format/Object cljs.core/IWriter}, :skip-protocol-flag #{cljs.core/IWriter}, :factory :positional, :arglists (quote ([group]))}, :protocols #{devtools.format/Object cljs.core/IWriter}, :name devtools.format/->TemplateWriter, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 24, :method-params ([group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group])), :skip-protocol-flag #{cljs.core/IWriter}}, prevent-recursion? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 61, :column 13, :end-line 61, :end-column 31, :tag bool, :arglists (quote ([]))}, :name devtools.format/prevent-recursion?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :ret-tag bool, :end-line 61, :max-fixed-arity 0, :tag bool, :fn-var true, :arglists (quote ([]))}, alt-printer-impl {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 280, :column 7, :end-line 280, :end-column 23, :arglists (quote ([obj writer opts]))}, :name devtools.format/alt-printer-impl, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 23, :method-params ([obj writer opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 3, :fn-var true, :arglists (quote ([obj writer opts]))}, body {:name devtools.format/body, :file "resources/public/js/out/devtools/format.cljs", :line 406, :column 1, :end-line 406, :end-column 10, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 406, :column 6, :end-line 406, :end-column 10}, :tag any}, number-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 136, :column 7, :end-line 136, :end-column 22, :arglists (quote ([value]))}, :name devtools.format/number-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 22, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, -header {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 10, :column 4, :end-line 10, :end-column 11, :protocol devtools.format/IDevtoolsFormat, :doc nil, :arglists (quote ([value]))}, :protocol devtools.format/IDevtoolsFormat, :name devtools.format/-header, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 11, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value])), :doc nil}, expandable? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 229, :column 7, :end-line 229, :end-column 18, :arglists (quote ([obj]))}, :name devtools.format/expandable?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 18, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, IDevtoolsFormat {:meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 9, :column 14, :end-line 9, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-header [[value]], -has-body [[value]], -body [[value]]}}}, :protocol-symbol true, :name devtools.format/IDevtoolsFormat, :file "resources/public/js/out/devtools/format.cljs", :end-column 29, :column 1, :line 9, :protocol-info {:methods {-header [[value]], -has-body [[value]], -body [[value]]}}, :info nil, :end-line 9, :tag any, :impls #{}, :doc nil, :jsdoc ("@interface")}, concat-templates {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 76, :column 7, :end-line 76, :end-column 23, :arglists (quote ([template & templates])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template templates)], :arglists ([template & templates]), :arglists-meta (nil)}}, :name devtools.format/concat-templates, :variadic true, :file "resources/public/js/out/devtools/format.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template templates)], :arglists ([template & templates]), :arglists-meta (nil)}, :method-params [(template templates)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists ([template & templates])}, cljs-function-body-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 167, :column 7, :end-line 167, :end-column 34, :arglists (quote ([fn-obj ns _name args prefix-template]))}, :name devtools.format/cljs-function-body-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 34, :method-params ([fn-obj ns _name args prefix-template]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 5, :fn-var true, :arglists (quote ([fn-obj ns _name args prefix-template]))}, body-api-call {:name devtools.format/body-api-call, :file "resources/public/js/out/devtools/format.cljs", :line 435, :column 1, :end-line 435, :end-column 19, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 435, :column 6, :end-line 435, :end-column 19}, :tag any}, build-body {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 348, :column 7, :end-line 348, :end-column 17, :arglists (quote ([value starting-index]))}, :name devtools.format/build-body, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 17, :method-params ([value starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value starting-index]))}, get-current-state {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 31, :column 7, :end-line 31, :end-column 24, :arglists (quote ([]))}, :name devtools.format/get-current-state, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, positions {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 102, :column 7, :end-line 102, :end-column 16, :arglists (quote ([pred coll]))}, :name devtools.format/positions, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 16, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, want-value? {:name devtools.format/want-value?, :file "resources/public/js/out/devtools/format.cljs", :line 403, :column 1, :end-line 403, :end-column 17, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 403, :column 6, :end-line 403, :end-column 17}, :tag any}, get-current-history {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 40, :column 7, :end-line 40, :end-column 26, :arglists (quote ([]))}, :name devtools.format/get-current-history, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, detect-edge-case-and-patch-it {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 267, :column 7, :end-line 267, :end-column 36, :arglists (quote ([group obj]))}, :name devtools.format/detect-edge-case-and-patch-it, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 36, :method-params ([group obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group obj]))}, bool? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 209, :column 7, :end-line 209, :end-column 12, :arglists (quote ([value]))}, :name devtools.format/bool?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, string-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 155, :column 7, :end-line 155, :end-column 22, :arglists (quote ([source-string]))}, :name devtools.format/string-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 22, :method-params ([source-string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([source-string]))}, managed-pr-str {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 299, :column 7, :end-line 299, :end-column 21, :arglists (quote ([value style print-level]))}, :name devtools.format/managed-pr-str, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 21, :method-params ([value style print-level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value style print-level]))}, has-body* {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 383, :column 7, :end-line 383, :end-column 16, :arglists (quote ([value]))}, :name devtools.format/has-body*, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 16, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, wrap-group-in-reference-if-needed {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 246, :column 7, :end-line 246, :end-column 40, :arglists (quote ([group obj]))}, :name devtools.format/wrap-group-in-reference-if-needed, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 40, :method-params ([group obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group obj]))}, body* {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 390, :column 7, :end-line 390, :end-column 12, :arglists (quote ([value]))}, :name devtools.format/body*, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, meta-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 143, :column 7, :end-line 143, :end-column 20, :arglists (quote ([value]))}, :name devtools.format/meta-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 20, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, build-header-wrapped {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 314, :column 7, :end-line 314, :end-column 27, :arglists (quote ([value]))}, :name devtools.format/build-header-wrapped, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 27, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, surrogate {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 87, :column 7, :end-line 87, :end-column 16, :arglists (quote ([object header] [object header has-body] [object header has-body body-template])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([object header] [object header has-body] [object header has-body body-template]), :arglists ([object header] [object header has-body] [object header has-body body-template]), :arglists-meta (nil nil nil)}}, :name devtools.format/surrogate, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([object header] [object header has-body] [object header has-body body-template]), :arglists ([object header] [object header has-body] [object header has-body body-template]), :arglists-meta (nil nil nil)}, :method-params ([object header] [object header has-body] [object header has-body body-template]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 4, :fn-var true, :arglists ([object header] [object header has-body] [object header has-body body-template])}, body-lines-templates {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 334, :column 7, :end-line 334, :end-column 27, :arglists (quote ([value starting-index]))}, :name devtools.format/body-lines-templates, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 27, :method-params ([value starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value starting-index]))}, TemplateWriter {:num-fields 1, :protocols #{devtools.format/Object cljs.core/IWriter}, :name devtools.format/TemplateWriter, :file "resources/public/js/out/devtools/format.cljs", :end-column 24, :type true, :column 10, :line 235, :record false, :end-line 235, :skip-protocol-flag #{cljs.core/IWriter}}, -has-body {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 11, :column 4, :end-line 11, :end-column 13, :protocol devtools.format/IDevtoolsFormat, :doc nil, :arglists (quote ([value]))}, :protocol devtools.format/IDevtoolsFormat, :name devtools.format/-has-body, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 13, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value])), :doc nil}, wrap-with-exception-guard {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 411, :column 7, :end-line 411, :end-column 32, :arglists (quote ([f]))}, :name devtools.format/wrap-with-exception-guard, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 32, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, push-object-to-current-history! {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 37, :column 7, :end-line 37, :end-column 38, :arglists (quote ([object]))}, :name devtools.format/push-object-to-current-history!, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 38, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, extend-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 79, :column 7, :end-line 79, :end-column 22, :arglists (quote ([template & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template args)], :arglists ([template & args]), :arglists-meta (nil)}}, :name devtools.format/extend-template, :variadic true, :file "resources/public/js/out/devtools/format.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template args)], :arglists ([template & args]), :arglists-meta (nil)}, :method-params [(template args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists ([template & args])}, build-surrogate-body {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 358, :column 7, :end-line 358, :end-column 27, :arglists (quote ([value]))}, :name devtools.format/build-surrogate-body, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 27, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, standard-reference {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 355, :column 7, :end-line 355, :end-column 25, :arglists (quote ([target]))}, :name devtools.format/standard-reference, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 25, :method-params ([target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target]))}, is-circular?! {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 110, :column 13, :end-line 110, :end-column 26, :tag bool, :arglists (quote ([object]))}, :name devtools.format/is-circular?!, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 26, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :ret-tag bool, :end-line 110, :max-fixed-arity 1, :tag bool, :fn-var true, :arglists (quote ([object]))}, cljs-function? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 45, :column 7, :end-line 45, :end-column 21, :arglists (quote ([value]))}, :name devtools.format/cljs-function?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, update-current-state! {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 34, :column 7, :end-line 34, :end-column 28, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name devtools.format/update-current-state!, :variadic true, :file "resources/public/js/out/devtools/format.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, body-line-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 323, :column 7, :end-line 323, :end-column 25, :arglists (quote ([index value]))}, :name devtools.format/body-line-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 25, :method-params ([index value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([index value]))}, circular-reference-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 121, :column 7, :end-line 121, :end-column 34, :arglists (quote ([content-group]))}, :name devtools.format/circular-reference-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 34, :method-params ([content-group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([content-group]))}, standard-body-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 317, :column 7, :end-line 317, :end-column 29, :arglists (quote ([lines] [lines margin?])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([lines] [lines margin?]), :arglists ([lines] [lines margin?]), :arglists-meta (nil nil)}}, :name devtools.format/standard-body-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([lines] [lines margin?]), :arglists ([lines] [lines margin?]), :arglists-meta (nil nil)}, :method-params ([lines] [lines margin?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 2, :fn-var true, :arglists ([lines] [lines margin?])}, template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 64, :column 7, :end-line 64, :end-column 15, :arglists (quote ([tag style & children])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag style children)], :arglists ([tag style & children]), :arglists-meta (nil)}}, :name devtools.format/template, :variadic true, :file "resources/public/js/out/devtools/format.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag style children)], :arglists ([tag style & children]), :arglists-meta (nil)}, :method-params [(tag style children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists ([tag style & children])}, build-header {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 308, :column 7, :end-line 308, :end-column 19, :arglists (quote ([value]))}, :name devtools.format/build-header, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 19, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, make-template-writer {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 243, :column 7, :end-line 243, :end-column 27, :arglists (quote ([]))}, :name devtools.format/make-template-writer, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, wrap-group-in-circular-warning-if-needed {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 251, :column 7, :end-line 251, :end-column 47, :arglists (quote ([group circular?]))}, :name devtools.format/wrap-group-in-circular-warning-if-needed, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 47, :method-params ([group circular?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group circular?]))}, native-reference {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 130, :column 7, :end-line 130, :end-column 23, :arglists (quote ([object]))}, :name devtools.format/native-reference, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 23, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, header {:name devtools.format/header, :file "resources/public/js/out/devtools/format.cljs", :line 404, :column 1, :end-line 404, :end-column 12, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 404, :column 6, :end-line 404, :end-column 12}, :tag any}, abbreviated? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 222, :column 7, :end-line 222, :end-column 19, :arglists (quote ([template]))}, :name devtools.format/abbreviated?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 19, :method-params ([template]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([template]))}, want-value?* {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 372, :column 7, :end-line 372, :end-column 19, :arglists (quote ([value]))}, :name devtools.format/want-value?*, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 19, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 372, :end-line 372, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, header* {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 377, :column 7, :end-line 377, :end-column 14, :arglists (quote ([value]))}, :name devtools.format/header*, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, *current-state* {:name devtools.format/*current-state*, :file "resources/public/js/out/devtools/format.cljs", :line 29, :column 1, :end-line 29, :end-column 31, :dynamic true, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 29, :column 16, :end-line 29, :end-column 31, :dynamic true}, :tag clj-nil}, has-body-api-call {:name devtools.format/has-body-api-call, :file "resources/public/js/out/devtools/format.cljs", :line 434, :column 1, :end-line 434, :end-column 23, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 434, :column 6, :end-line 434, :end-column 23}, :tag any}, surrogate? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 82, :column 7, :end-line 82, :end-column 17, :arglists (quote ([value]))}, :name devtools.format/surrogate?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, -body {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 12, :column 4, :end-line 12, :end-column 9, :protocol devtools.format/IDevtoolsFormat, :doc nil, :arglists (quote ([value]))}, :protocol devtools.format/IDevtoolsFormat, :name devtools.format/-body, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 9, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value])), :doc nil}, reference {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 126, :column 7, :end-line 126, :end-column 16, :arglists (quote ([object & [state-override]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(object [state-override])], :arglists ([object & [state-override]]), :arglists-meta (nil)}}, :name devtools.format/reference, :variadic true, :file "resources/public/js/out/devtools/format.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(object [state-override])], :arglists ([object & [state-override]]), :arglists-meta (nil)}, :method-params [(object [state-override])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists ([object & [state-override]])}, atomic-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 212, :column 7, :end-line 212, :end-column 22, :arglists (quote ([value]))}, :name devtools.format/atomic-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 22, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, cljs-function-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 186, :column 7, :end-line 186, :end-column 29, :arglists (quote ([fn-obj]))}, :name devtools.format/cljs-function-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 29, :method-params ([fn-obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn-obj]))}, build-api-call {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 419, :column 7, :end-line 419, :end-column 21, :arglists (quote ([raw-fn pre-handler-key post-handler-key]))}, :name devtools.format/build-api-call, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 21, :method-params ([raw-fn pre-handler-key post-handler-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 419, :end-line 419, :max-fixed-arity 3, :fn-var true, :arglists (quote ([raw-fn pre-handler-key post-handler-key]))}, seq-count-is-greater-or-equal? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 225, :column 7, :end-line 225, :end-column 37, :arglists (quote ([seq limit]))}, :name devtools.format/seq-count-is-greater-or-equal?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 37, :method-params ([seq limit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 2, :fn-var true, :arglists (quote ([seq limit]))}, header-api-call {:name devtools.format/header-api-call, :file "resources/public/js/out/devtools/format.cljs", :line 433, :column 1, :end-line 433, :end-column 21, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 433, :column 6, :end-line 433, :end-column 21}, :tag any}, has-body {:name devtools.format/has-body, :file "resources/public/js/out/devtools/format.cljs", :line 405, :column 1, :end-line 405, :end-column 14, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 405, :column 6, :end-line 405, :end-column 14}, :tag any}, abbreviate-long-string {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 149, :column 7, :end-line 149, :end-column 29, :arglists (quote ([string]))}, :name devtools.format/abbreviate-long-string, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 29, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, cljs-value? {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([value]))}, :name devtools.format/cljs-value?, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 18, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, index-template {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 133, :column 7, :end-line 133, :end-column 21, :arglists (quote ([value]))}, :name devtools.format/index-template, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, config-wrapper {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 398, :column 7, :end-line 398, :end-column 21, :arglists (quote ([raw-fn]))}, :name devtools.format/config-wrapper, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 21, :method-params ([raw-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 398, :end-line 398, :max-fixed-arity 1, :fn-var true, :arglists (quote ([raw-fn]))}, remove-positions {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 106, :column 7, :end-line 106, :end-column 23, :arglists (quote ([coll indices]))}, :name devtools.format/remove-positions, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 23, :method-params ([coll indices]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll indices]))}, prepare-body-lines {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/resources/public/js/out/devtools/format.cljs", :line 326, :column 7, :end-line 326, :end-column 25, :arglists (quote ([data starting-index]))}, :name devtools.format/prepare-body-lines, :variadic false, :file "resources/public/js/out/devtools/format.cljs", :end-column 25, :method-params ([data starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data starting-index]))}}, :require-macros {devtools.util devtools.util, devtools.prefs devtools.prefs}, :cljs.analyzer/constants {:seen #{:max-number-body-items :symbol-style :nil-style :body-pre-handler :line-index-separator :new-line-string-replacer :meta-reference-style :fn-symbol :header-style :fn-args-style :fn-header-style :body-items-more-label :fn-name-style :else :has-body-pre-handler :rest-symbol :surrogate-key :fn-ns-symbol-style :string-abbreviation-marker :max-header-elements :li :header-post-handler :circular-reference-wrapper-style :header-pre-handler :prevent-recursion group :circular-reference-symbol :fn-prefix-style :args-open-symbol :expanded-string-style :standard-li-style :body-style :history :entered-reference :dq :nil-label :fallback-impl :standard-ol-no-margin-style :fn-lambda-symbol :standard-ol-style :fn-native-symbol :float-style :body-post-handler :more-marker :fn-native-symbol-style :bool-style :seqables-always-expandable :string-style :min-sequable-count-for-expansion :integer-style :ol :spacer :print-length :standard-li-no-margin-style :args-close-symbol :string-postfix-limit :disable-cljs-fn-formatting :fn-lambda-symbol-style :item-style :index-style :fn-multi-arity-args-indent-style :fn-symbol-style :fn-ns-name-style :has-body-post-handler :fn-ns-symbol :body-items-more-label-style :max-print-level :meta-wrapper-style :multi-arity-symbol :alt-impl :meta-body-style :string-prefix-limit :cljs-style :circular-reference-symbol-style :aligned-li-style :print-meta-data :body-line-max-print-level :keyword-style :span :meta-style}, :order [:history :disable-cljs-fn-formatting :prevent-recursion :surrogate-key :entered-reference :span :circular-reference-wrapper-style :circular-reference-symbol-style :circular-reference-symbol :index-style :line-index-separator :integer-style :float-style :meta-style :meta-body-style :meta-reference-style :string-prefix-limit :string-abbreviation-marker :string-postfix-limit :dq :new-line-string-replacer :string-style :expanded-string-style :li :aligned-li-style :fn-multi-arity-args-indent-style :fn-args-style :fn-ns-symbol-style :fn-ns-symbol :fn-ns-name-style :fn-native-symbol-style :fn-native-symbol :body-style :ol :standard-ol-no-margin-style :args-open-symbol :args-close-symbol :multi-arity-symbol :spacer :rest-symbol :fn-name-style :fn-lambda-symbol-style :fn-lambda-symbol :fn-symbol-style :fn-symbol :fn-prefix-style :fn-header-style :nil-style :nil-label :bool-style :keyword-style :symbol-style :more-marker :seqables-always-expandable :min-sequable-count-for-expansion group :header-style :else :fallback-impl :print-length :alt-impl :max-header-elements :max-print-level :print-meta-data :meta-wrapper-style :cljs-style :standard-ol-style :standard-li-style :standard-li-no-margin-style :item-style :body-line-max-print-level :max-number-body-items :body-items-more-label-style :body-items-more-label :header-pre-handler :header-post-handler :has-body-pre-handler :has-body-post-handler :body-pre-handler :body-post-handler]}, :doc nil}