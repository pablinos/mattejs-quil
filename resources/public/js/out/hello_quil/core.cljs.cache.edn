{:rename-macros {}, :renames {}, :externs {Matter {Bodies {rectangle {}}, World {add {}}, Engine {create {}, update {}}}}, :use-macros {}, :excludes #{}, :name hello-quil.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware, cljsjs.matter cljsjs.matter}, :uses nil, :defs {createRectangleBody {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 10, :column 7, :end-line 10, :end-column 26, :arglists (quote ([x y w h options]))}, :name hello-quil.core/createRectangleBody, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 26, :method-params ([x y w h options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x y w h options]))}, addBoxToWorld! {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 17, :column 7, :end-line 17, :end-column 21, :arglists (quote ([engine box]))}, :name hello-quil.core/addBoxToWorld!, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 21, :method-params ([engine box]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([engine box]))}, spawnBox {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([engine x y w h]))}, :name hello-quil.core/spawnBox, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 15, :method-params ([engine x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 5, :fn-var true, :arglists (quote ([engine x y w h]))}, setup {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 29, :column 7, :end-line 29, :end-column 12, :arglists (quote ([]))}, :name hello-quil.core/setup, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 49, :column 7, :end-line 49, :end-column 19, :arglists (quote ([{:keys [engine boxes millis deltaO], :as state}]))}, :name hello-quil.core/update-state, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 19, :method-params ([p__30788]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [engine boxes millis deltaO], :as state}]))}, drawBox {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 66, :column 7, :end-line 66, :end-column 14, :arglists (quote ([{:keys [w h box]}]))}, :name hello-quil.core/drawBox, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 14, :method-params ([p__30793]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [w h box]}]))}, mouse-dragged {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 78, :column 7, :end-line 78, :end-column 20, :arglists (quote ([{:keys [boxes engine], :as state} {:keys [x y], :as event}]))}, :name hello-quil.core/mouse-dragged, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 20, :method-params ([p__30799 p__30800]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [boxes engine], :as state} {:keys [x y], :as event}]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 87, :column 7, :end-line 87, :end-column 17, :arglists (quote ([{:keys [engine boxes millis], :as state}]))}, :name hello-quil.core/draw-state, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 17, :method-params ([p__30809]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [engine boxes millis], :as state}]))}, hello-quil {:protocol-inline nil, :meta {:file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :line 97, :column 14, :end-line 97, :end-column 24, :export true, :arglists (quote ([]))}, :name hello-quil.core/hello-quil, :variadic false, :file "/Users/paulbunkham/Documents/Projects/Clojure/quil/hello-quil/src/hello_quil/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :hsb :boxes :isStatic :fn :w :box :update :size :center :setup :middleware :host :restitution :h :host-id :no-start :x :engine :friction :draw :deltaO :millis :mouse-dragged}, :order [:w :h :box :friction :restitution :hsb :center :isStatic :engine :boxes :millis :deltaO :x :y :host :update :size :setup :middleware :draw :mouse-dragged :no-start :fn :host-id]}, :doc nil}